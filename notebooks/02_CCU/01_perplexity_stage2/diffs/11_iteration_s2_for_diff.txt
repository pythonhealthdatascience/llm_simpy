nbdiff 11_iteration_s2.ipynb diffs/11_iteration_s2_for_diff.ipynb
--- 11_iteration_s2.ipynb  2024-06-14 12:41:21.730566
+++ diffs/11_iteration_s2_for_diff.ipynb  2024-06-14 12:46:57.264737
## inserted before /cells/8:
+  code cell:
+    id: 3f8627f9-d146-4a13-8dbe-7677148aed11
+    source:
+      def multiple_replications(experiment, num_replications=5):
+          all_results = []
+      
+          for i in range(num_replications):
+              env = simpy.Environment()
+              ccu = CCU(env, experiment)
+              ccu.reset_kpi()
+              results = ccu.run()
+              results['Replication'] = i + 1
+              all_results.append(results)
+      
+          combined_results = pd.concat(all_results, ignore_index=True)
+          return combined_results

## modified /cells/8/source:
@@ -40,12 +40,12 @@ class CCU:
         self.total_unplanned_waiting_time = 0
         self.total_unplanned_admissions = 0
         self.total_treatment_time = 0
-        self.rng_accident_emergency = np.random.default_rng(seed=42)
-        self.rng_wards = np.random.default_rng(seed=43)
-        self.rng_emergency_surgery = np.random.default_rng(seed=44)
-        self.rng_other_hospitals = np.random.default_rng(seed=45)
-        self.rng_xray_department = np.random.default_rng(seed=46)
-        self.rng_elective_surgery = np.random.default_rng(seed=47)
+        self.rng_accident_emergency = np.random.default_rng()
+        self.rng_wards = np.random.default_rng()
+        self.rng_emergency_surgery = np.random.default_rng()
+        self.rng_other_hospitals = np.random.default_rng()
+        self.rng_xray_department = np.random.default_rng()
+        self.rng_elective_surgery = np.random.default_rng()
         self.critical_care_beds = simpy.Resource(env, capacity=self.experiment.num_critical_care_beds)
 
     def lognormal_to_normal(self, mu, sigma):
@@ -205,12 +205,14 @@ class CCU:
             "Total Cancelled Elective Operations": self.cancelled_operations,
             "Mean Unplanned Admission Waiting Time (hours)": self.total_unplanned_waiting_time / self.total_unplanned_admissions if self.total_unplanned_admissions > 0 else 0,
             "Bed Utilization": bed_utilization,
-            "Bed Occupancy": bed_occupancy
+            "Bed Occupancy": bed_occupancy,
+            "Patient Count": self.patient_id_counter
         }
 
-        results_df = pd.DataFrame.from_dict(performance_measures, orient='index', columns=['Value'])
+        results_df = pd.DataFrame.from_dict(performance_measures, orient='index').T
         return results_df
 
+
 # Run the simulation
 experiment = Experiment(trace=False)  # Set trace=True to enable event printing
 env = simpy.Environment()

(gen_simpy) alison@pop-os:~/Dropbox/code/LLM/llm_simpy/notebooks/02_CCU/01_perplexity_stage2$ 